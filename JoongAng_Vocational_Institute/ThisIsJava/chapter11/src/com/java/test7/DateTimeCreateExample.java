package com.java.test7;

import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.temporal.ChronoUnit;

public class DateTimeCreateExample {

	public static void main(String[] args) throws InterruptedException {
		// 날짜 얻기
		LocalDate currDate = LocalDate.now();
		System.out.println("현재날짜: " + currDate);

		LocalDate targetDate = LocalDate.of(2024, 5, 10);
		System.out.println("목표날짜: " + targetDate + "\n");

		// 시간 얻기
		LocalTime currTime = LocalTime.now();
		System.out.println("현재시간: " + currTime);

		// of(int 시간, int 분, int 초, int 나노초)
		LocalTime targetTime = LocalTime.of(6, 30, 0, 0);
		System.out.println("목표시간: " + targetTime + "\n");

		// 날짜와 시간 얻기
		LocalDateTime currDateTime = LocalDateTime.now();
		System.out.println("현재 날짜와 시간: " + currDateTime);

		LocalDateTime targetDateTime = LocalDateTime.of(2024, 5, 10, 6, 30, 0, 0);
		System.out.println("목표 날짜와 시간: " + targetDateTime + "\n");

		// 협정 세계시와 시간존(TimeZone)
		ZonedDateTime utcDateTime = ZonedDateTime.now(ZoneId.of("UTC"));
		System.out.println("협정 세계시: " + utcDateTime);
		ZonedDateTime newyorkDateTime = ZonedDateTime.now(ZoneId.of("America/New_York"));
		System.out.println("뉴욕 시간존: " + newyorkDateTime);
		ZonedDateTime londonDateTime = ZonedDateTime.now(ZoneId.of("Europe/London"));
		System.out.println("런던 시간존: " + londonDateTime + "\n");
		
		// 특정 시점의 타임스탬프 얻기
		Instant instant1 = Instant.now();
		System.out.println("instant1: " + instant1);
		Thread.sleep(10);	//10ms만큼 쉼
		Instant instant2 = Instant.now();
		System.out.println("instant2: " + instant2);
		if (instant1.isBefore(instant2)) {
			System.out.println("instant1이 빠릅니다.");
		} else if (instant1.isAfter(instant2)) {
			System.out.println("instant1이 느립니다.");
		} else {
			System.out.println("동일한 시간입니다.");
		}
		
		System.out.println("현재 시간과 뉴욕시간 분차이 :" + currDateTime.until(newyorkDateTime, ChronoUnit.MINUTES));
		System.out.println("차이(nanos): " + instant1.until(instant2, ChronoUnit.NANOS));
		System.out.println("차이(micros): " + instant1.until(instant2, ChronoUnit.MICROS));
		System.out.println("차이(milles): " + instant1.until(instant2, ChronoUnit.MILLIS));
		System.out.println("차이(seconds): " + instant1.until(instant2, ChronoUnit.SECONDS));

	}

}
